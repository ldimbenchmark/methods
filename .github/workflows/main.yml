name: Build & publish images
on: 
  workflow_dispatch:
    inputs:
      version:
        type: text
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  get_methods:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: | 
          cd methods
          ls | jq -R -s -c 'split("\n")[:-1]
          echo "::set-output name=matrix::$(ls | jq -R -s -c 'split("\n")[:-1]')"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        folder: ${{ fromJson(needs.get_methods.outputs.matrix) }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ghcr.io/ldimbenchmark/${{ matrix.folder }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: methods/${{ matrix.folder }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            LDIMBENCHMARK_VERSION=${{ github.event.inputs.version }}
